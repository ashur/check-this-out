{%- from "plugins/css/component.njk" import component with context -%}

{#
 # @prop {Object} componentData
 # @prop {string} step
 # @prop {string} subtitle
 # @callable true
 #}
{% macro render( props ) %}
<section
	id="step-{{ props.step }}"
	class="[ measure stack ][ showcase ][ Step ]"
>
	{% if props.componentData %}
		{{ component( "Phone", props.componentData ) }}
	{% endif %}

	<div class="[ stack ][][]">
		<header class="[ stack-xs ][][ Step-header ]">
			<h3 class="[][ font-heading ][ Step-title ]">Step {{ props.step }}</h3>
			<p class="[][][ Step-subtitle ]">{{ props.subtitle | safe }}</p>
		</header>

		{% if caller %}
		<div class="[ stack ][][ Step-content ]">
			{{ caller() }}
		</div>
		{% endif -%}
	</div>
</section>
{% endmacro %}

{% set criticalStyles %}
<style>
	.Step {
		--column-left-width: 3fr;
		--column-right-width: 2fr;
		--measure-size: 64ch;

		column-gap: var( --size-0 );
	}
		.Step:nth-of-type( 2n ) {
			--column-left-width: 2fr;
			--column-right-width: 3fr;
		}
		@media (min-width: 800px) {
			.Step:nth-of-type( 2n+2 ) > *:nth-child(1) {
				order: 1;
			}
		}

	.Step-title {
		font-size: var( --size-1 );
		text-transform: uppercase;
	}
	.Step-subtitle {
		--measure-size: 36ch;
	}
		.Step-subtitle strong {
			white-space: nowrap;
		}

	.Step-title,
	.Step-subtitle,
	.Step-content {
		text-align: center;
	}
		@media (min-width: 800px) {
			.Step-title,
			.Step-subtitle,
			.Step-content {
				text-align: left;
			}

			.Step:nth-of-type( 2n ) .Step-title,
			.Step:nth-of-type( 2n ) .Step-subtitle,
			.Step:nth-of-type( 2n ) .Step-content {
				text-align: right;
			}
		}

	.Step input[type="text"],
	.Step input[type="url"] {
		-webkit-appearance: none;
		background-color: transparent;
		border-radius: 0;
		border: solid var( --color-black ) var( --size--4 );
		padding: var( --size--3 ) var( --size--2 );
		width: 100%;
	}
	.Step input[type="url"]:focus {
		box-shadow: 0 0 0 var( --size--4 ) var( --color-teal );
		outline: none;
	}
	.Step input[type="url"]::placeholder {
		color: var( --color-black );
		opacity: 0.5;
	}

	.Step [data-error],
	.Step [data-validated] {
		position: relative;
		display: grid;
		align-items: center;
		justify-items: end;
	}
	.Step [data-error]::after,
	.Step [data-validated]::after {
		align-self: center;
		background-position: center;
		background-repeat: no-repeat;
		background-size: 66%;
		border-radius: var( --size--4 );
		content: "";
		height: var( --size-1 );
		margin-right: calc( var( --size--4 ) + var( --size--3 ) );
		position: absolute;
		width: var( --size-1 );
	}
	.Step [data-error] input,
	.Step [data-validated] input {
		padding-right: calc( var( --size--3 ) + var( --size--3 ) + var( --size-1 ) );
	}
	.Step [data-error]::after {
		background-color: var( --color-pink );
		background-image: url( /icons/status-error.svg );
	}
	.Step [data-validated]::after {
		background-color: var( --color-teal );
		background-image: url( /icons/status-success.svg );
	}

	.Step .slug {
		border-radius: var( --size--4 );
		font-family: Menlo, monospace;
		font-size: calc( var( --font-size ) - 0.05em );
		margin-left: var( --size--4 );
		padding: var( --size--4 ) var( --size--2);
	}
</style>
{% endset %}

{%- from "plugins/css/component.njk" import component with context -%}

{#
 # @prop {Object} componentData
 # @prop {string} step
 # @callable true
 #}
{% macro render( props ) %}
<section
	id="step-{{ props.step }}"
	class="[ center measure stack ][ showcase ][ Step ]"
>
	<div class="[ stack-sm ][][]">
		<header class="[ stack ][][ Step-header ]">
			<h3 class="[][ font-heading ][ Step-title ]">Step {{ props.step }}</h3>
		</header>

		{% if caller %}
		<div class="[ stack ][][ Step-content ]">
			{{ caller() }}
		</div>
		{% endif -%}
	</div>

	{% if props.componentData %}
		{{ component( "Phone", props.componentData ) }}
	{% endif %}
</section>
{% endmacro %}

{% set criticalStyles %}
<style>
	.Step {
		--column-left-width: 2fr;
		--column-right-width: 2fr;
		--measure-size: 72ch;

		column-gap: var( --size-1 );

		padding: calc( var( --size-2 ) + 4vw );
		padding-top: calc( var( --stack-xl-size ) / 2 );
		padding-bottom: calc( var( --stack-xl-size ) / 2 );

		--shadow-depth: var( --size-2 );
		box-shadow:
			0
			calc( var( --shadow-depth ) * 2 )
			calc( var( --shadow-depth ) * 2 )
			calc( -1 * var( --shadow-depth ) * 2 )
			hsla(45, 63%, 71%, 0.33)
			inset,

			0
			calc( var( --shadow-depth ) * 0.5 )
			calc( var( --shadow-depth ) * 0.5 )
			calc( -1 * calc( var( --shadow-depth ) * 1 ) )
			hsla(45, 63%, 71%, 0.5)
			inset,

			0
			calc( var( --shadow-depth ) * 0.25 )
			calc( var( --shadow-depth ) * 0.25 )
			calc( -1 * calc( var( --shadow-depth ) * 0.25 ) )
			hsla(45, 63%, 71%, 0.75)
			inset,

			0
			calc( var( --shadow-depth ) * 0.0625 )
			calc( var( --shadow-depth ) * 0.0625 )
			calc( -1 * calc( var( --shadow-depth ) * 0.0625 ) )
			hsla(45, 63%, 71%, 1)
			inset
		;
	}
		.Step:nth-of-type( 1 ) {
			box-shadow: none;
			padding-top: var( --stack-lg-size );
		}
		@media (min-width: 800px) {
			.Step {
				box-shadow: none;
				padding: 0;
			}
			.Step > *:nth-child(1) {
				order: 1;
			}
			.Step:nth-of-type( 2n+2 ) > *:nth-child(1) {
				/* order: 1; */
			}
		}

	.Step-header {

	}
		@media (min-width: 800px) {
			.Step-header {
				margin-top: var( --stack-lg-size );
			}
		}

	.Step-title {
		font-size: var( --size-1 );
		text-transform: uppercase;
	}

	.Step-title {
		text-align: center;
	}
		@media (min-width: 800px) {
			.Step-title {
				text-align: left;
			}
		}

	.Step input[type="text"],
	.Step input[type="url"] {
		-webkit-appearance: none;
		background-color: transparent;
		border-radius: 0;
		border: solid var( --color-black ) var( --size--4 );
		padding: var( --size--3 ) var( --size--2 );
		width: 100%;
	}
	.Step input:focus {
		box-shadow: 0 0 0 var( --size--4 ) var( --color-teal );
		outline: none;
	}
	.Step button:focus-visible {
		box-shadow: 0 0 0 var( --size--4 ) var( --color-teal ) inset;
		outline: none;
	}
	.Step input[type="url"]::placeholder {
		color: var( --color-black );
		opacity: 0.5;
	}
</style>
{% endset %}

{% set asyncStyles %}
<style>
	.Step [data-error],
	.Step [data-validated] {
		position: relative;
		display: grid;
		align-items: center;
		justify-items: end;
	}
	.Step [data-error]::after,
	.Step [data-validated]::after {
		align-self: center;
		background-position: center;
		background-repeat: no-repeat;
		background-size: 66%;
		border-radius: var( --size--4 );
		content: "";
		height: var( --size-1 );
		margin-right: calc( var( --size--4 ) + var( --size--3 ) );
		position: absolute;
		width: var( --size-1 );
	}
	.Step [data-error] input,
	.Step [data-validated] input {
		padding-right: calc( var( --size--3 ) + var( --size--3 ) + var( --size-1 ) );
	}
	.Step [data-error]::after {
		background-color: var( --color-pink );
		background-image: url( "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='82' height='82' xmlns:v='https://vecta.io/nano'%3E%3Cpath d='M5.645 5.645l70.711 70.711m-70.711 0L76.355 5.645' stroke='%23fdf8e9' stroke-width='20' fill='none'/%3E%3C/svg%3E" );
	}
	.Step [data-validated]::after {
		background-color: var( --color-teal );
		background-image: url( "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='85' height='67' xmlns:v='https://vecta.io/nano'%3E%3Cpath d='M7.145 27.136l32.527 32.527m-14.142 0L77.855 7.337' stroke='%23fdf8e9' stroke-width='20' fill='none'/%3E%3C/svg%3E" );
	}
</style>
{% endset %}

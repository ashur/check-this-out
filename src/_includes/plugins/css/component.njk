{#-
 # Huge thanks to Trys Mudford for introducing me to the encapsulated components
 # model https://www.trysmudford.com/blog/encapsulated-11ty-components/
-#}
{%- macro component( name, props ) -%}
	{%- set pageFilePath -%}
		{#- Support asynchronous stylesheets generated through pagination -#}
		{%- if pagination -%}
			{{- pagination.items[0].filePathStem -}}
		{%- else -%}
			{{- page.filePathStem -}}
		{%- endif -%}
	{%- endset -%}

	{%- import plugins.esc.dir.components + "/" + name + ".njk" as Component with context -%}

	{% if Component.asyncStyles %}
		{{ plugins.esc.addStyle({
			identifier: pageFilePath,
			scope: "async",
			style: (Component.asyncStyles | striptags(true))
		}) }}
	{% endif %}

	{% if Component.criticalStyles %}
		{{ plugins.esc.addStyle({
			identifier: pageFilePath,
			scope: "critical",
			style: (Component.criticalStyles | striptags(true))
		}) }}
	{% endif %}

	{% if Component.asyncScripts %}
		{% for asyncScript in Component.asyncScripts %}
			{{ plugins.esc.addScript({
				identifier: pageFilePath,
				scope: "async",
				script: asyncScript
			}) }}
		{% endfor %}
	{% endif %}

	{% if Component.criticalScript %}
		{{ plugins.esc.addScript({
			identifier: pageFilePath,
			scope: "critical",
			script: (Component.criticalScript | striptags(true))
		}) }}
	{% endif %}

	{%- if caller -%}
		{%- call Component.render( props ) -%}{{ caller() | escape }}{%- endcall -%}
	{%- else -%}
		{{- Component.render( props ) | escape -}}
	{%- endif -%}
{%- endmacro -%}

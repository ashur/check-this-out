---
title: Install & Configure
subtitle: Quick and easy, you’ll be up and running in just a few minutes.
layout: layouts/page.njk
page:
  theme: theme-cream-light
---
{%- from "plugins/css/component.njk" import component with context -%}

<div
	class="[ center container stack-xl ][][ article-install ]"
	x-data="InstallApp()"
>
	{% call component( "Step",
		{
			componentData: components.Phone.Install.Step1,
			step: 1
		}
	) %}
		<p>Tap and hold <a href="https://libbyapp.com/search/libraries/">this Libby search link</a>, then tap <strong>Open in New Tab</strong>.</p>
		<p>Next, search for your public library system, tap the matching result, then copy the URL and paste it below.</p>
		<div
			class="[ stack-sm ][][]"
		>
			<div
				x-bind:data-validated="librarySlug !== undefined"
				x-bind:data-error="error.type === 'url'"
			>
				<input
					x-model="userLibraryUrl"

					type="url"
					placeholder="Libby URL"
				/>
			</div>
			<p
				aria-live="polite"
				class="[][ font-xs ][]"
				x-show="error.type === 'url'"
				x-text="error.message"
			></p>
		</div>
	{% endcall %}


	{% call component( "Step",
		{
			componentData: components.Phone.Install.Step3,
			step: 2
		}
	)%}
		<p>Open the <a x-bind:href="iosClient ? 'App-prefs://prefs:root' : false">Settings</a> app, scroll to Shortcuts</a>, then enable <strong>Allow Untrusted Shortcuts</strong></p>
	{% endcall %}


	{% call component( "Step",
		{
			componentData: components.Phone.Install.Step4,
			step: 3
		}
	) %}
		<div>
			<p
				x-show="librarySlug"
			>Install the <a target="_blank" href="https://www.icloud.com/shortcuts/27d1f2285ad344768d5faba6801639a9">{{ site.title }} shortcut</a> on your iPhone or iPad.</p>
			<p
				x-show="!librarySlug"
			>Before continuing, head back to <a class="no-wrap" href="#step-2">Step 2</a> and make sure your Libby library URL is correct.</p>
		</div>

		<div
			x-cloak
			x-show="librarySlug"

			class="[ stack ][][]"
		>
			<p
			>
				Scroll to the bottom of the “Add Shortcut” screen and tap <strong>Add Untrusted Shortcut</strong>.
			</p>

			<p
			>
				When prompted “What is your library slug?” type or paste
				<code
					class="[][ theme-black ][ slug ]"
					x-text="librarySlug"
				></code>
			</p>
		</div>
	{% endcall %}


	{% call component( "Step",
		{
			componentData: components.Phone.Install.Step5,
			step: 4
		}
	) %}
		<div>
			<p
				x-show="librarySlug"
			>When prompted for a “library slug,” type or paste <code class="[][ theme-black ][ slug ]" x-text="librarySlug"></code> then tap <strong>Done</strong></p>
			<p
				x-show="!librarySlug"
			>Before continuing, head back to <a class="no-wrap" href="#step-2">Step 2</a> and make sure your Libby library URL is correct.</p>
		</div>
		<p
			x-cloak
			x-show="librarySlug"
		>
			When prompted for a “library slug,” type or paste
			<code class="[][ theme-black ][ slug ]" x-text="librarySlug"></code>
		</p>
	{% endcall %}
</div>

<script>
	let InstallApp = () =>
	{
		return {
			error: {
				message: "",
				type: null,
			},

			get iosClient() {
				return /iPad|iPhone/.test(navigator.platform);
			},

			userLibraryUrl: "",

			get librarySlug()
			{
				if( this.libraryUrl )
				{
					let pathElements = this.libraryUrl.pathname.split( "/" );
					if( pathElements[1] !== "library" || pathElements.length < 3 )
					{
						return;
					}

					return pathElements[2];
				}
			},

			get libraryUrl()
			{
				this.error.type = null;
				this.error.message = "";

				if( this.userLibraryUrl && this.userLibraryUrl.length > 8 )
				{
					try
					{
						let userUrl = new URL( this.userLibraryUrl );
						let baseUrl = "https://libbyapp.com/library/";

						if( userUrl.hostname === "libbyapp.com" )
						{
							if( userUrl.pathname.indexOf( "/library/" ) === 0 )
							{
								return userUrl;
							}
							else
							{
								if( baseUrl.indexOf( this.userLibraryUrl ) !== 0 )
								{
									this.error.type = "url";
									this.error.message = "That doesn’t look like the right Libby URL";
								}
							}
						}
						else
						{
							if( baseUrl.indexOf( this.userLibraryUrl ) !== 0 )
							{
								this.error.type = "url";
								this.error.message = "That doesn’t look like a Libby URL";
							}
						}

					}
					catch( error )
					{
						this.error.type = "url";
						this.error.message = "That doesn’t look like a valid URL";
					}
				}
			},
		};
	};
</script>

---
title: Install & Configure
subtitle: Quick and easy, you’ll be up and running in just a few minutes.
layout: layouts/page.njk
page:
  theme: theme-cream-light
---
{%- from "plugins/css/component.njk" import component with context -%}

<div
	class="[ center stack-xl ][][]"
	x-data="InstallApp()"
>
	{{ component( "Step",
		{
			componentData: components.Phone.Install.Step1,
			step: 1,
			subtitle: '<a target="_blank" href="https://libbyapp.com/search/libraries">Search for your library</a> on Libby’s website'
		}
	) }}


	{% call component( "Step",
		{
			componentData: components.Phone.Install.Step2,
			step: 2,
			subtitle: "Tap your library in the search results. Copy the URL then paste it below."
		}
	) %}
		<div
			x-bind:data-validated="librarySlug !== undefined"
			x-bind:data-error="error.type === 'url'"
		>
			<input
				x-model="userLibraryUrl"

				type="url"
				placeholder="Libby URL"
			/>
		</div>
		<p
			aria-live="polite"
			class="[][ font-xs ][]"
			x-show="error.type === 'url'"
			x-text="error.message"
		></p>
	{% endcall %}


	{{ component( "Step",
		{
			componentData: components.Phone.Install.Step3,
			step: 3,
			subtitle: 'Open the <a href="App-prefs://prefs:root">Settings</a> app, scroll to Shortcuts</a>, then enable <strong>Allow Untrusted Shortcuts</strong>'
		}
	) }}
</div>

<script>
	let InstallApp = () =>
	{
		return {
			error: {
				message: "",
				type: null,
			},

			userLibraryUrl: "",

			get librarySlug()
			{
				if( this.libraryUrl )
				{
					let pathElements = this.libraryUrl.pathname.split( "/" );
					if( pathElements[1] !== "library" || pathElements.length !== 3)
					{
						return;
					}

					return pathElements[2];
				}
			},

			get libraryUrl()
			{
				this.error.type = null;
				this.error.message = "";

				if( this.userLibraryUrl && this.userLibraryUrl.length > 8 )
				{
					try
					{
						let userUrl = new URL( this.userLibraryUrl );
						let baseUrl = "https://libbyapp.com/library/";

						if( userUrl.hostname === "libbyapp.com" )
						{
							if( userUrl.pathname.indexOf( "/library/" ) === 0 )
							{
								return userUrl;
							}
							else
							{
								if( baseUrl.indexOf( this.userLibraryUrl ) !== 0 )
								{
									this.error.type = "url";
									this.error.message = "That doesn’t look like the right Libby URL";
								}
							}
						}
						else
						{
							if( baseUrl.indexOf( this.userLibraryUrl ) !== 0 )
							{
								this.error.type = "url";
								this.error.message = "That doesn’t look like a Libby URL";
							}
						}

					}
					catch( error )
					{
						this.error.type = "url";
						this.error.message = "That doesn’t look like a valid URL";
					}
				}
			},
		};
	};
</script>

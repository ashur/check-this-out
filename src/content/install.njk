---
title: Install & Configure
subtitle: Quick and easy, you’ll be up and running in just a few minutes.
layout: layouts/page.njk
page:
  theme: theme-cream-light
metadata:
  title: Check This Out
---
{%- from "plugins/css/component.njk" import component with context -%}

<div
	class="[ center container stack-custom ][][ article-install ]"
	x-data="InstallApp()"
>
	{% call component( "Step",
		{
			componentData: components.Phone.Install.Step1,
			step: 1
		}
	)%}
		<p>Save this page to your browser favorites or bookmarks. We’ll come back and edit the address in just a moment.</p>
	{% endcall %}


	{% call component( "Step",
		{
			componentData: components.Phone.Install.Step2,
			step: 2
		}
	) %}
		<div>
			<p
				x-show="iosClient"
			>Tap and hold <a href="https://libbyapp.com/search/libraries/">this Libby search link</a>, then tap <strong>Open in New Tab</strong>.</p>

			<p
				x-show="!iosClient"
			>Open <a href="https://libbyapp.com/search/libraries/" target="_blank">this Libby search link</a> in your browser.</p>
		</div>

		<p>Next, search for your library system and <span x-text="iosClient ? 'tap' : 'click'">tap</span> the matching result to view its Libby page.</p>

		<p>Finally, copy the URL for your library’s Libby page and paste it below.</p>
		<div
			class="[ stack-sm ][][]"
		>
			<div
				x-bind:data-validated="librarySlug !== undefined"
				x-bind:data-error="error.type === 'url'"
				@input="saveLibraryUrl()"
			>
				<input
					x-model="userLibraryUrl"

					type="url"
					placeholder="Libby URL"
				/>
			</div>
			<p
				aria-live="polite"
				class="[][ font-xs ][]"
				x-show="error.type === 'url'"
				x-text="error.message"
			></p>
		</div>
	{% endcall %}


	{% call component( "Step",
		{
			componentData: components.Phone.Install.Step3,
			step: 3
		}
	) %}
		<div
			x-cloak
			x-show="librarySlug"
			class="[ stack ][][]"
		>
			<p>Tap the <span class="[][][ install-copy-button ]"><span class="visually-hidden">Copy bookmarklet</span></span> button to copy the snippet below.</p>

			<fieldset
				class="[][ relative ][ integrated-fieldset ]"
			>
				<input
					class="[][ font-mono ][]"
					x-bind:value="bookmarklet"
					type="text"
				>
				<button
					@click="copyBookmarklet"
					style="--background-image: url( /icons/button-copy.svg );"
				>
					<span class="visually-hidden">Copy bookmarklet</span>
				</button>
			</fieldset>

			<p>Next, open your favorites again, edit the {{ site.title }} bookmark we created in step 1, and replace the URL with the bookmarklet.</p>
		</div>

		<p
			x-show="!librarySlug"
		>Before continuing, head back to <a class="no-wrap" href="#step-2">Step 2</a> and make sure your Libby library URL is correct.</p>
	{% endcall %}


	{#
	{% call component( "Step",
		{
			componentData: components.Phone.Install.Step5,
			step: 4
		}
	) %}

	{% endcall %}
	#}
</div>

<script>
	let InstallApp = () =>
	{
		return {
			error: {
				message: "",
				type: null,
			},

			get bookmarklet()
			{
				let bookmarklet = "var d=document;var w=window;var ts;if(w.getSelection){ts=w.getSelection().toString()}else if(d.selection&&d.selection.type!='Control'){ts=d.selection.createRange().text}var url='https://libbyapp.com/library/" + this.librarySlug + "/search/query-'+ts+'/page-1';w.location.href=url;";

				return encodeURI('javascript:(function(){' + bookmarklet + '})()');
			},

			get iosClient() {
				return /iPad|iPhone/.test(navigator.platform);
			},

			userLibraryUrl: "",

			get librarySlug()
			{
				if( this.libraryUrl )
				{
					let pathElements = this.libraryUrl.pathname.split( "/" );
					if( pathElements[1] !== "library" || pathElements.length < 3 )
					{
						return;
					}

					return pathElements[2];
				}
				else
				{
					let param = (new URL( window.location.href )).searchParams.get( "library" );
					if( param )
					{
						return param;
					}
				}
			},

			get libraryUrl()
			{
				this.error.type = null;
				this.error.message = "";

				if( this.userLibraryUrl && this.userLibraryUrl.length > 8 )
				{
					try
					{
						let userUrl = new URL( this.userLibraryUrl );
						let baseUrl = "https://libbyapp.com/library/";

						if( userUrl.hostname === "libbyapp.com" )
						{
							if( userUrl.pathname.indexOf( "/library/" ) === 0 )
							{
								return userUrl;
							}
							else
							{
								if( baseUrl.indexOf( this.userLibraryUrl ) !== 0 )
								{
									this.error.type = "url";
									this.error.message = "That doesn’t look like the right Libby URL";
								}
							}
						}
						else
						{
							if( baseUrl.indexOf( this.userLibraryUrl ) !== 0 )
							{
								this.error.type = "url";
								this.error.message = "That doesn’t look like a Libby URL";
							}
						}

					}
					catch( error )
					{
						this.error.type = "url";
						this.error.message = "That doesn’t look like a valid URL";
					}
				}
			},

			async copyBookmarklet( event )
			{
				await navigator.clipboard.writeText( this.bookmarklet );
				event.target.dataset.status = "success";
				setTimeout( () =>
				{
					event.target.dataset.status = "";
				}, 2000 );
			},

			init()
			{
				let sessionLibraryUrl = sessionStorage.getItem( "libraryUrl" );
				if( sessionLibraryUrl )
				{
					this.userLibraryUrl = sessionLibraryUrl;
				}
			},

			saveLibraryUrl()
			{
				if( this.librarySlug )
				{
					sessionStorage.setItem( "libraryUrl", this.libraryUrl );
				}
				else
				{
					sessionStorage.removeItem( "libraryUrl" );
				}
			}
		};
	};
</script>
